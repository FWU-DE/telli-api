name: Docker Staging

on:
  workflow_dispatch:
    inputs:
      commit_hash:
        description: "Commit Hash"
        required: true
        default: "test"

  pull_request:
    branches: [main]

  push:
    branches: [main]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  COMMIT_HASH: ${{ github.sha }}

jobs:
  dockerize-staging:
    name: Build and Push to GitHub Container Registry
    runs-on: ubuntu-latest
    timeout-minutes: 10
    # if: github.ref == 'refs/heads/main'

    permissions:
      contents: read
      packages: write
      id-token: write
      attestations: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: apps/api/Dockerfile
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.COMMIT_HASH }}
          labels: ${{ steps.meta.outputs.labels }}
          push: true

  deploy-staging:
    name: Rollout to Staging
    needs: dockerize-staging
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set Kubernetes Context
        uses: azure/k8s-set-context@v4
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBE_CONFIG }}
          context: ""

      - name: Update Kubernetes Deployment
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

        run: |
          COMMIT_HASH=${{ env.commit_hash }}
          echo "Updating Kubernetes Deployment with image: ghcr.io/fwu-dev/telli-api:pr-3"
          kubectl set image deployment/telli-api-staging \
            telli-api-staging=ghcr.io/fwu-dev/telli-api:pr-3
          kubectl rollout restart deployment telli-api-staging
      - name: Wait for rollout to complete
        run: |
          echo "Waiting for rollout to complete"
          kubectl rollout status deployment/telli-api-staging
