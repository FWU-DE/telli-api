name: Docker Staging

on:
  workflow_dispatch:
    inputs:
      commit_hash:
        description: 'Commit Hash'
        required: true
        default: 'test'
  push:
    branches: [main]

jobs:
  dockerize-staging:
    name: Build and Push to DockerHub
    needs: checks
    runs-on: ubuntu-latest
    timeout-minutes: 10
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get Commit Hash
        id: commit
        run: echo "commit_hash=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./apps/api/Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository }}:${{ env.commit_hash }}

  deploy-staging:
    name: Rollout to Staging
    needs: dockerize-staging
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set Kubernetes Context
        uses: azure/k8s-set-context@v4
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBE_CONFIG }}
          context: ''

      - name: Update Kubernetes Deployment
        run: |
          COMMIT_HASH=${{ env.commit_hash }}
          echo "Updating Kubernetes Deployment with image: ghcr.io/${{ github.repository }}:${COMMIT_HASH}"
          # kubectl set image telli-api-staging api=ghcr.io/${{ github.repository }}:${COMMIT_HASH}
          # kubectl rollout restart deployment telli-api-staging
